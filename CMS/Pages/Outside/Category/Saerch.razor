@page "/search/{name}/{pageNumber?}"
@inherits BacePage<BasePageObj>
@using CMS.Model;
@inject IJSRuntime Js

<PageTitle>post</PageTitle>
@{
    base.BuildRenderTree(__builder);
}


<div class="container main">
    <div class="mainSlideLeft">
        <div class="card p-4">
            <div class="my-4">
                <div class="input-group mb-3">
                    <input @bind="searchText" type="text" class="form-control">
                    <input @onclick="btnSearchSelect" type="submit" id="searchsubmit" value="جستجو" class="btn btn-primary">
                </div>
                @if (!string.IsNullOrEmpty(searchText))
                {
                    <div class="input-group mt-3 h4">نتایج جستجو برای: @searchText</div>
                    <div class="input-group mb-3">موارد یافت شده: @pageInation?.Total</div>
                }
            </div>
        </div>

        @if (items.Count > 0)
        {
            <div class="row">
                @foreach (var item in items)
                {
                    <article class="article col-lg-4 col-md-6 col-sm-12">

                        <div class="card w-100 my-4 ">
                            <div class="img">
                                <img src="@Model.Files.Item.GetThumbnail(item.Img)" class="card-img-top" alt="@item.Title">
                            </div>
                            @if (item.SpecialPrice > 0)
                            {
                                <div class="badge labeTakhfif"> تخفیف @darsadPrice(item)</div>
                            }
                            @if (item.Special)
                            {
                                <div class="badge labelSpecial">ویژه</div>
                            }
                            <div class="card-body">

                                <h2 class="card-title h4">
                                    <NavLink href="@link(item)" class="text-decoration-none">@item.Title</NavLink>
                                </h2>

                                @if (item.Price > 0 || item.SpecialPrice > 0)
                                {
                                    <div class="c">
                                        @if (item.Price > 0)
                                        {
                                            <span class="@classPrice(item)">@item.Price </span>
                                        }
                                        @if (item.SpecialPrice > 0)
                                        {
                                            <span class="many"> @item.SpecialPrice </span>
                                        }
                                        <span style="font-size:10px"> تومان</span>
                                    </div>
                                }
                            </div>
                            <div class="card-footer bg-white border-0">
                                <NavLink href="@link(item)" class="btn bg-BaseColor text-white">مشاهده</NavLink>
                            </div>
                        </div>
                    </article>
                }
            </div>
            <CMS.Pages.Inside.Post.PostPagInation ItemModel="pageInation" Style="style" SetPageIndex="setPageIndex" />
        }
        else
        {
            <div class="card rounded-0 p-4 w-100">
                <span>مطلبی برای نمایش وجود ندارد</span>
            </div>
        }
    </div>
    <RightMenu />
</div>


@code {
    [Parameter]
    public string name { get; set; }
    [Parameter]
    public string pageNumber { get; set; }

    string searchText = "";

    string style = "background: unset;";
    string linkPageInation = "";

    public int _pageNumber { get; set; }
    bool isLoading = false;
    public PostVM Serch = new PostVM { PageIndex = 1, PageSize = 10 };

    BasePageObj obj = new BasePageObj();
    public override BasePageObj Obj { get => obj; set => obj = value; }
    PageInation pageInation = new PageInation();

    CMS.Dal.DataSource.PostDataSource db = new CMS.Dal.DataSource.PostDataSource();

    List<PostProduct> items = new List<PostProduct>();

    protected override async Task OnInitializedAsync()
    {
        linkPageInation = $"/search/{name}";
        searchText = name.Replace("-"," ");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender)
        {
            await selectMenu();
        }
        await Js.InvokeVoidAsync("PageInit");
    }


    private void setPageIndex(int i)
    {
        Serch.PageIndex = i;
        selectItem();
    }
    async Task selectMenu(string s ="")
    {
        if (pageNumber == null)
            _pageNumber = 1;
        else
        {
            try
            {
                _pageNumber = int.Parse(pageNumber);
            }
            catch
            {
                _pageNumber = 1;
            }
        }
        try
        {
            var homePostId = CMS.Model.Option.GetItem(CMS.Model.OptionType.PostCount);
            Serch.PageSize = int.Parse(homePostId.Text);
        }
        catch
        {
            Serch.PageSize = 10;
        }
        Serch.PageIndex = _pageNumber;
        if (!string.IsNullOrEmpty(s) || !string.IsNullOrEmpty(name))
        {
            pageInation = new PageInation();
            Serch.Title = string.IsNullOrEmpty(s)? name:s;
            isLoading = true;
            await selectItem();
        }
    }

    async Task selectItem()
    {
        await Obj.LoadHandler(true);
        var result = await db.SearchAsync(Serch);
        isLoading = false;
        if (!result.Success)
        {
            await obj.ErrorRequest(result);
            await Obj.LoadHandler(false);
            return;
        }
        items = result.Data.ToList();

        pageInation = new PageInation
            {
                PageIndex = Serch?.PageIndex,
                PageSize = Serch?.PageSize,
                Total = items?.Count > 0 ? items[0].Total : 0,
                ItemsCount = items.ToList().Count
            };
        await Obj.LoadHandler(false);
        StateHasChanged();
    }

    string link(PostProduct model)
    {
        if (model.IsProduct)
            return $"/product/{model.Alias}";
        return $"/{model.Alias}";
    }

    string darsadPrice(PostProduct model)
    {
        return $"{100 - ((model.SpecialPrice * 100) / model.Price)}%";
    }

    string classPrice(PostProduct model)
    {
        if (model.SpecialPrice > 0)
            return "many diactive";
        return "many";
    }

    private async void btnSearchSelect()
    {
        await selectMenu(searchText);
    }
}
