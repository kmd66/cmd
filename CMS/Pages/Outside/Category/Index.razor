@page "/category/{name}/{pageNumber?}"
@inherits BacePage<BasePageObj>
@using CMS.Model;
@inject IJSRuntime Js

<PageTitle>post</PageTitle>
@{
    base.BuildRenderTree(__builder);
}


<div class="container main">
    <div class="mainSlideLeft">

        @if (menu != null)
        {
            if (isLoading)
            {
                <div class="card rounded-0 p-4 w-100">درحال بارگزاری</div>
            }
            else
            {

                <div class="card rounded-0 w-100 mb-4">
                    <div style="max-height: 200px; position:relative">
                        <div class="postTitle">
                            <h1 class="h2">@menu.Name</h1>
                        </div>
                        <img src="@menu.Img" class="card-img-top rounded-0" alt="@menu.Name">
                    </div>
                </div>
                @if (items.Count > 0)
                {
                        <div class="row">
                            @foreach (var item in items)
                        {
                            <article class="article col-lg-4 col-md-6 col-sm-12">

                                <div class="card w-100 my-4 ">
                                    <div class="img">
                                        <img src="@Model.Files.Item.GetThumbnail(item.Img)" class="card-img-top" alt="@item.Title">
                                    </div>
                                    @if (item.Special)
                                    {
                                        <div class="badge labelSpecial">ویژه</div>
                                    }
                                    <div class="card-body">

                                        <h2 class="card-title h4">
                                            <NavLink href='@($"/{item.Alias}")' class="text-decoration-none">@item.Title</NavLink>
                                        </h2>

                                        <p class="card-text mt-3">@item.Summary</p>
                                    </div>
                                    <div class="card-footer bg-white border-0">
                                        <NavLink href='@($"/{item.Alias}")' class="btn bg-BaseColor text-white">ادامه مطلب</NavLink>
                                    </div>
                                </div>
                                </article>
                            }
                        </div>
                    <CMS.Pages.Inside.Post.PostPagInation ItemModel="pageInation" Style="style" Link="@link" />
                }
                else
                {
                    <div class="card rounded-0 p-4 w-100">
                        <span>مطلبی برای نمایش وجود ندارد</span>
                    </div>
                }
            }
        }
        else
        {
            <Error404 />
        }
    </div>
    <RightMenu />
</div>


@code {
    [Parameter]
    public string name { get; set; }
    [Parameter]
    public string pageNumber { get; set; }

    string style = "background: unset;";
    string link = "";

    public int _pageNumber { get; set; }
    public Menu? menu { get; set; }
    bool isLoading = false;
    public PostVM Serch = new PostVM { PageIndex = 1, PageSize = 10 };

    BasePageObj obj = new BasePageObj();
    public override BasePageObj Obj { get => obj; set => obj = value; }
    PageInation pageInation = new PageInation();

    CMS.Dal.DataSource.PostDataSource db = new CMS.Dal.DataSource.PostDataSource();
    CMS.Pages.Inside.Comment.CommentHelper commentHelper = new Inside.Comment.CommentHelper(null);

    List<Post> items = new List<Post>();

    protected override async Task OnInitializedAsync()
    {
        link = $"/category/{name}";
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
        }
        await Js.InvokeVoidAsync("PageInit");
        await base.OnAfterRenderAsync(firstRender);
    }

    protected async override Task OnParametersSetAsync()
    {
        await selectMenu();
        if (menu != null)
        {
            pageInation = new PageInation();
            Serch.MenuId = menu.UnicId;
            isLoading = true;
            await selectItem();
        }
    }

    async Task selectMenu()
    {
        if (pageNumber == null)
            _pageNumber = 1;
        else
        {
            try
            {
                _pageNumber = int.Parse(pageNumber);
            }
            catch
            {
                _pageNumber = 1;
            }
        }
        menu = Menus.GetByAlias(name);
        try
        {
            var homePostId = CMS.Model.Option.GetItem(CMS.Model.OptionType.PostCount);
            Serch.PageSize = int.Parse(homePostId.Text);
        }
        catch
        {
            Serch.PageSize = 10;
        }
        Serch.PageIndex = _pageNumber;
    }

    async Task selectItem()
    {
        var result = await db.ListAsync(Serch);
        items = result.Data.ToList();

        pageInation = new PageInation
            {
                PageIndex = Serch?.PageIndex,
                PageSize = Serch?.PageSize,
                Total = items?.Count > 0 ? items[0].Total:0,
                ItemsCount = items.ToList().Count
            };
        isLoading = false;
    }
}
