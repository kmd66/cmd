@using CMS.Model;
<div class="tableMain">
    <div class="tableHeder">
        <NavLink href='cmd-admin/menu/add' class="btn">
            ایجاد
        </NavLink>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th scope="col" style="width:50px"></th>
                <th scope="col">نام</th>
                <th scope="col">نوع</th>
                <th scope="col" style="width:50px"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Obj.Items)
            {
                <tr>
                    <th scope="row" style="text-align:center;cursor: pointer;color:var(--BaseColor);">
                        <div @onclick='(() => ChangeIndex(true, item))'>↑</div>
                        <div @onclick='(() => ChangeIndex(false, item))'>↓</div>
                    </th>
                    <td>@item.Name</td>
                    <td>@item.Type</td>
                    <td style="text-align:center">
                        <NavLink href='@($"cmd-admin/menu/edit/{item.UnicId}")' class="nav-link d-flex">
                            <span class="svgEdit"></span>
                        </NavLink>
                    </td>
                </tr>

            }
        </tbody>
    </table>
</div>

@code {
    [Parameter]
    public PageObj Obj { get; set; }
    int i = 0;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        i = 0;
        if (firstRender)
        {
            setItem();
        }

    }

    private async void setItem()
    {
        var itemResult = Obj.Helper.GetItems(Obj.Serch);

        if (!itemResult.Success)
        {
            await Obj.ErrorRequest(itemResult);
            return;
        }
        Obj.Items = itemResult.Data;
        StateHasChanged();
    }

    private async void ChangeIndex(bool up, Model.Menu model)
    {
        await Obj.LoadHandler(true);

        var result = await Obj.Helper.EditItem(model);

        if (!result.Success)
        {
            await Obj.ErrorRequest(result);
            return;
        }
        await Obj.LoadHandler(false);
        setItem();
    }

    private async void SetPublish(Model.Menu model)
    {
        model.Published = !model.Published;
        await Obj.LoadHandler(true);

        var result = await Obj.Helper.EditItem(model);

        if (!result.Success)
        {
            await Obj.ErrorRequest(result);
            return;
        }
        await Obj.LoadHandler(false);
        setItem();
    }
}
